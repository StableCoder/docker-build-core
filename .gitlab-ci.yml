stages:
  - Basic Images
  - Latest Images
  - Post-pipeline

#############
# Templates #
#############

.build_image: &build_template
  image: docker:dind
  except:
    - master
  tags:
    - linux
    - docker-builder
  script:
    - docker build -t stabletec/build-core:${OS}${RELEASE}-gcc-${CI_COMMIT_REF_NAME} -f ${OS}/${OS}${RELEASE}/gcc.dockerfile ${OS}/${OS}${RELEASE}
    - docker build -t stabletec/build-core:${OS}${RELEASE}-clang-${CI_COMMIT_REF_NAME} -f ${OS}/${OS}${RELEASE}/clang.dockerfile ${OS}/${OS}${RELEASE}

.upload_image: &upload_template
  image: docker:dind
  only:
    - master
  tags:
    - linux
    - docker-builder
  before_script: 
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
  script:
    - docker build ${DOCKER_NO_CACHE} -t stabletec/build-core:${OS}${RELEASE}-gcc -f ${OS}/${OS}${RELEASE}/gcc.dockerfile ${OS}/${OS}${RELEASE}
    - docker build -t stabletec/build-core:${OS}${RELEASE}-clang -f ${OS}/${OS}${RELEASE}/clang.dockerfile ${OS}/${OS}${RELEASE}
    - docker push stabletec/build-core:${OS}${RELEASE}-gcc
    - docker push stabletec/build-core:${OS}${RELEASE}-clang
  after_script:
    - docker logout

.latest_upload_image: &latest_upload_template
  image: docker:dind
  only:
    - master
  tags:
    - linux
    - docker-builder
  before_script: 
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
  script:
    - docker build -t stabletec/build-core:${OS}${RELEASE}-gcc -f ${OS}/${OS}${RELEASE}/gcc.dockerfile ${OS}/${OS}${RELEASE}
    - docker build -t stabletec/build-core:${OS}${RELEASE}-clang -f ${OS}/${OS}${RELEASE}/clang.dockerfile ${OS}/${OS}${RELEASE}
    - docker push stabletec/build-core:${OS}${RELEASE}-gcc
    - docker push stabletec/build-core:${OS}${RELEASE}-clang
  after_script:
    - docker logout

################
# Image Builds #
################

Build Fedora26:
  stage: Basic Images
  variables:
    OS: fedora
    RELEASE: 26
  <<: *build_template

Build Fedora27:
  stage: Basic Images
  variables:
    OS: fedora
    RELEASE: 27
  <<: *build_template

Build Fedora28:
  stage: Basic Images
  variables:
    OS: fedora
    RELEASE: 28
  <<: *build_template

Build Fedora (Latest):
  stage: Latest Images
  variables:
    OS: fedora
    RELEASE: ''
  <<: *build_template

Build CentOS7:
  stage: Basic Images
  variables:
    OS: centos
    RELEASE: 7
  <<: *build_template

Build CentOS (Latest):
  stage: Latest Images
  variables:
    OS: centos
    RELEASE: ''
  <<: *build_template

Build Ubuntu 16:
  stage: Basic Images
  variables:
    OS: ubuntu
    RELEASE: '16.04'
  <<: *build_template

Build Ubuntu 18:
  stage: Basic Images
  variables:
    OS: ubuntu
    RELEASE: '18.04'
  <<: *build_template

Build Ubuntu (Latest):
  stage: Latest Images
  variables:
    OS: ubuntu
    RELEASE: ''
  <<: *build_template

.Build Windows:
  stage: Basic Images
  variables:
    OS: windows
    RELEASE: ''
  except:
    - master
  tags:
    - windows
    - docker-builder
  script:
    - docker build -t stabletec/build-core:%OS%%RELEASE%-msvc2017-%CI_COMMIT_REF_NAME% -m 2GB -f windows/msvc2017.dockerfile windows

###############
# Push Images #
###############

Push Fedora26:
  stage: Basic Images
  variables:
    OS: fedora
    RELEASE: 26
  <<: *upload_template

Push Fedora27:
  stage: Basic Images
  variables:
    OS: fedora
    RELEASE: 27
  <<: *upload_template

Push Fedora28:
  stage: Basic Images
  variables:
    OS: fedora
    RELEASE: 28
  <<: *upload_template

Push Fedora (Latest):
  stage: Latest Images
  variables:
    OS: fedora
    RELEASE: ''
  <<: *latest_upload_template

Push CentOS7:
  stage: Basic Images
  variables:
    OS: centos
    RELEASE: 7
  <<: *upload_template

Push CentOS (Latest):
  stage: Latest Images
  variables:
    OS: centos
    RELEASE: ''
  <<: *latest_upload_template

Push Ubuntu 16.04:
  stage: Basic Images
  variables:
    OS: ubuntu
    RELEASE: '16.04'
  <<: *upload_template

Push Ubuntu 18.04:
  stage: Basic Images
  variables:
    OS: ubuntu
    RELEASE: '18.04'
  <<: *upload_template

Push Ubuntu (Latest):
  stage: Latest Images
  variables:
    OS: ubuntu
    RELEASE: ''
  <<: *latest_upload_template

.Push Windows:
  stage: Basic Images
  variables:
    OS: windows
    RELEASE: ''
  only:
    - master
  tags:
    - windows
    - docker-builder
  before_script:
    - docker login -u %DOCKER_USER% -p %DOCKER_PASSWORD%
  script:
    - docker build %DOCKER_NO_CACHE% -t stabletec/build-core:%OS%%RELEASE%-msvc2017 -m 2GB -f windows/msvc2017.dockerfile windows
    - docker push stabletec/build-core:%OS%%RELEASE%-msvc2017
  after_script:
    - docker logout

#################
# Post-pipeline #
#################

Pipeline Triggers:
  stage: Post-pipeline
  image: stabletec/alpine:curl
  only:
    - master
  tags:
    - linux
    - docker
  script:
    - echo "Triggering build-stec (13)"
    - curl --request POST --form "token=$CI_JOB_TOKEN" --form ref=master http://git.stabletec.com/api/v4/projects/13/trigger/pipeline