# Required Environment Variables (For Upload):
# DOCKER_USER - The username for logging into the Docker registry
# DOCKER_PASSWORD - The password for logging into the Docker registry

# Optional Environment Variables
# DOCKER_REGISTRY - The registry the images will be pushed to, must end with '/'
# CORE_NAME - The main name of the image, to override the original name.

stages:
  - Build Images
  - Upload Images

variables:
  DOCKER_REGISTRY: ''
  CORE_NAME: 'stabletec/build-core'

#############################
# Image Build/Testing Stage #
#############################

# amd64
.build_image_amd64: &build_template_amd64
  stage: Build Images
  image: docker:dind
  except:
    - master
  tags:
    - docker-linux
    - amd64
  script:
    - ./image_builder.sh -b -t -r -o ${OS} -i test ${EXTRA_OPTIONS} ${NO_CACHE}

Fedora Build (amd64):
  variables:
    OS: fedora
  <<: *build_template_amd64

CentOS Build (amd64):
  variables:
    OS: centos
  <<: *build_template_amd64

Debian Build (amd64):
  variables:
    OS: debian
  <<: *build_template_amd64

Ubuntu Build (amd64):
  variables:
    OS: ubuntu
  <<: *build_template_amd64

openSUSE Build (amd64):
  variables:
    OS: opensuse
  <<: *build_template_amd64

Windows Build (amd64):
  stage: Build Images
  except:
    refs:
      - master
    variables:
      - $NO_CACHE
  tags:
    - docker-windows
    - amd64
  script:
    - cd windows; .\image_builder.ps1 -imagename test -test -rm

Windows Build (amd64)(no cache):
  stage: Build Images
  except:
    refs:
      - master
  only:
    variables:
      - $NO_CACHE  
  tags:
    - docker-windows
    - amd64
  script:
    - cd windows; .\image_builder.ps1 -imagename test -test -n -rm

# armv7
.build_image_armv7: &build_template_armv7
  stage: Build Images
  image: docker:dind
  except:
    - master
  tags:
    - docker-linux
    - armv7
  script:
    - ./image_builder.sh -b -t -r -o ${OS} -i test ${EXTRA_OPTIONS} ${NO_CACHE}

Debian Build (armv7):
  variables:
    OS: debian
  <<: *build_template_armv7

Ubuntu Build (armv7):
  variables:
    OS: ubuntu
  <<: *build_template_armv7

#######################
# Image Uploads Stage #
#######################

# amd64
.upload_image_amd64: &upload_template_amd64
  stage: Upload Images
  image: docker:dind
  only:
    - master
  tags:
    - docker-linux
    - amd64
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} ${DOCKER_REGISTRY}
    - ./image_builder.sh -b -t -p -o ${OS} -i ${DOCKER_REGISTRY}${CORE_NAME} ${EXTRA_OPTIONS} ${NO_CACHE}
  after_script:
    - docker logout ${DOCKER_REGISTRY}

Fedora Upload (amd64):
  variables:
    OS: fedora
  <<: *upload_template_amd64

CentOS Upload (amd64):
  variables:
    OS: centos
  <<: *upload_template_amd64

Debian Upload (amd64):
  variables:
    OS: debian
  <<: *upload_template_amd64

Ubuntu Upload (amd64):
  variables:
    OS: ubuntu
  <<: *upload_template_amd64

openSUSE Upload (amd64):
  variables:
    OS: opensuse
  <<: *upload_template_amd64

Windows Upload (amd64):
  stage: Upload Images
  only:
    refs:
      - master
  except:
    variables:
      - $NO_CACHE
  tags:
    - docker-windows
    - amd64
  script:
    - docker login -u $env:DOCKER_USER -p "$env:DOCKER_PASSWORD" $env:DOCKER_REGISTRY
    - cd windows; .\image_builder.ps1 -imagename ${env:DOCKER_REGISTRY}${env:CORE_NAME} -test
  after_script:
    - docker logout $env:DOCKER_REGISTRY

Windows Upload (amd64)(no cache):
  stage: Upload Images
  only:
    refs:
      - master
    variables:
      - $NO_CACHE
  tags:
    - docker-windows
    - amd64
  script:
    - docker login -u $env:DOCKER_USER -p "$env:DOCKER_PASSWORD" $env:DOCKER_REGISTRY
    - cd windows; .\image_builder.ps1 -imagename ${env:DOCKER_REGISTRY}${env:CORE_NAME} -test -n
  after_script:
    - docker logout $env:DOCKER_REGISTRY

# armv7
.upload_image_armv7: &upload_template_armv7
  stage: Upload Images
  image: docker:dind
  only:
    - master
  tags:
    - docker-linux
    - armv7
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} ${DOCKER_REGISTRY}
    - ./image_builder.sh -b -t -p -o ${OS} -i ${DOCKER_REGISTRY}${CORE_NAME} ${EXTRA_OPTIONS} ${NO_CACHE}
  after_script:
    - docker logout ${DOCKER_REGISTRY}

Debian Upload (armv7):
  variables:
    OS: debian
  <<: *upload_template_armv7

Ubuntu Upload (armv7):
  variables:
    OS: ubuntu
  <<: *upload_template_armv7