# Required Environment Variables (For Upload):
# DOCKER_USER - The username for logging into the Docker registry
# DOCKER_PASSWORD - The password for logging into the Docker registry

# Optional Environment Variables
# DOCKER_REGISTRY - The registry the images will be pushed to, must end with '/'
# CORE_NAME - The main name of the image, to override the original name.

##########
# Global #
##########

stages:
  - Build Images
  - Upload Images

variables:
  DOCKER_REGISTRY: ''
  CORE_NAME: 'stabletec/build-core'

######################
# Image Builds Stage #
######################

.build_image: &build_template
  image: docker:dind
  except:
    - master
  tags:
    - docker-linux
  script:
    - ./image_builder.sh -b -t -o ${OS} -i test ${EXTRA_OPTIONS} ${NO_CACHE}

Fedora Build:
  stage: Build Images
  variables:
    OS: fedora
  <<: *build_template

CentOS Build:
  stage: Build Images
  variables:
    OS: centos
  <<: *build_template

Debian Build:
  stage: Build Images
  variables:
    OS: debian
  <<: *build_template

Ubuntu Build:
  stage: Build Images
  variables:
    OS: ubuntu
  <<: *build_template

openSUSE Build:
  stage: Build Images
  variables:
    OS: opensuse
  <<: *build_template

Rolling Build:
  stage: Build Images
  image: docker:dind
  except:
    - master
  tags:
    - docker-linux
  script:
    # Fedora Rawhide
    - docker build --pull -t test:fedora-rawhide -f rolling/fedora/Dockerfile .
    - docker run --rm test:fedora-rawhide
        # GCC
    - sed -i 's/.*ENTRYPOINT.*/ENTRYPOINT [ ".\/entrypoint.sh", "-g", "--"  ]/' rolling/fedora/Dockerfile
    - docker build --pull -t test:fedora-rawhide-gcc -f rolling/fedora/Dockerfile .
    - docker run --rm test:fedora-rawhide-gcc
        # Clang
    - sed -i 's/.*ENTRYPOINT.*/ENTRYPOINT [ ".\/entrypoint.sh", "-c", "--"  ]/' rolling/fedora/Dockerfile
    - docker build --pull -t test:fedora-rawhide-clang -f rolling/fedora/Dockerfile .
    - docker run --rm test:fedora-rawhide-clang
    # openSUSE Tumbleweed
    - docker build --pull -t test:opensuse-tumbleweed -f rolling/opensuse/Dockerfile .
    - docker run --rm test:opensuse-tumbleweed
        # GCC
    - sed -i 's/.*ENTRYPOINT.*/ENTRYPOINT [ ".\/entrypoint.sh", "-g", "--"  ]/' rolling/opensuse/Dockerfile
    - docker build --pull -t test:opensuse-tumbleweed-gcc -f rolling/opensuse/Dockerfile .
    - docker run --rm test:opensuse-tumbleweed-gcc
        # Clang
    - sed -i 's/.*ENTRYPOINT.*/ENTRYPOINT [ ".\/entrypoint.sh", "-c", "--"  ]/' rolling/opensuse/Dockerfile
    - docker build --pull -t test:opensuse-tumbleweed-clang -f rolling/opensuse/Dockerfile .
    - docker run --rm test:opensuse-tumbleweed-clang

Windows MSVC/ClangCL/Clang Build:
  stage: Build Images
  except:
    - master
  tags:
    - docker-windows
  script:
    # MSVC
    - docker build --pull -t test:windows-msvc -f windows/msvc.dockerfile -m 4GB windows
    - docker run --rm test:windows-msvc
    # clang-cl
    - docker build --pull -t test:windows-clang-cl -f windows/clang-cl.dockerfile -m 4GB windows
    - docker run --rm test:windows-clang-cl
    # clang
    - docker build --pull -t test:windows-clang -f windows/clang.dockerfile -m 4GB windows
    - docker run --rm test:windows-clang

#######################
# Image Uploads Stage #
#######################

.upload_image: &upload_template
  image: docker:dind
  only:
    - master
  tags:
    - docker-linux
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} ${DOCKER_REGISTRY}
    - ./image_builder.sh -b -t -p -o ${OS} -i ${DOCKER_REGISTRY}${CORE_NAME} ${EXTRA_OPTIONS} ${NO_CACHE}
  after_script:
    - docker logout ${DOCKER_REGISTRY}

Fedora Upload:
  stage: Upload Images
  variables:
    OS: fedora
  <<: *upload_template

CentOS Upload:
  stage: Upload Images
  variables:
    OS: centos
  <<: *upload_template

Debian Upload:
  stage: Upload Images
  variables:
    OS: debian
  <<: *upload_template

Ubuntu Upload:
  stage: Upload Images
  variables:
    OS: ubuntu
  <<: *upload_template

openSUSE Upload:
  stage: Upload Images
  variables:
    OS: opensuse
  <<: *upload_template

Rolling Upload:
  stage: Upload Images
  image: docker:dind
  only:
    - master
  tags:
    - docker-linux
  script:
    # Fedora Rawhide
    - docker build --pull -t ${DOCKER_REGISTRY}${CORE_NAME}:fedora-rawhide -f rolling/fedora/Dockerfile .
    - docker run --rm -${DOCKER_REGISTRY}${CORE_NAME}:fedora-rawhide
        # GCC
    - sed -i 's/.*ENTRYPOINT.*/ENTRYPOINT [ ".\/entrypoint.sh", "-g", "--"  ]/' rolling/fedora/Dockerfile
    - docker build --pull -t ${DOCKER_REGISTRY}${CORE_NAME}:fedora-rawhide-gcc -f rolling/fedora/Dockerfile .
    - docker run --rm -${DOCKER_REGISTRY}${CORE_NAME}:fedora-rawhide-gcc
        # Clang
    - sed -i 's/.*ENTRYPOINT.*/ENTRYPOINT [ ".\/entrypoint.sh", "-c", "--"  ]/' rolling/fedora/Dockerfile
    - docker build --pull -t ${DOCKER_REGISTRY}${CORE_NAME}:fedora-rawhide-clang -f rolling/fedora/Dockerfile .
    - docker run --rm -${DOCKER_REGISTRY}${CORE_NAME}:fedora-rawhide-clang
    # openSUSE Tumbleweed
    - docker build --pull -t ${DOCKER_REGISTRY}${CORE_NAME}:opensuse-tumbleweed -f rolling/opensuse/Dockerfile .
    - docker run --rm -${DOCKER_REGISTRY}${CORE_NAME}:opensuse-tumbleweed
        # GCC
    - sed -i 's/.*ENTRYPOINT.*/ENTRYPOINT [ ".\/entrypoint.sh", "-g", "--"  ]/' rolling/opensuse/Dockerfile
    - docker build --pull -t ${DOCKER_REGISTRY}${CORE_NAME}:opensuse-tumbleweed-gcc -f rolling/opensuse/Dockerfile .
    - docker run --rm -${DOCKER_REGISTRY}${CORE_NAME}:opensuse-tumbleweed-gcc
        # Clang
    - sed -i 's/.*ENTRYPOINT.*/ENTRYPOINT [ ".\/entrypoint.sh", "-c", "--"  ]/' rolling/opensuse/Dockerfile
    - docker build --pull -t ${DOCKER_REGISTRY}${CORE_NAME}:opensuse-tumbleweed-clang -f rolling/opensuse/Dockerfile .
    - docker run --rm ${DOCKER_REGISTRY}${CORE_NAME}:opensuse-tumbleweed-clang
    # Upload
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} ${DOCKER_REGISTRY}
    - docker push ${DOCKER_REGISTRY}${CORE_NAME}:fedora-rawhide
    - docker push ${DOCKER_REGISTRY}${CORE_NAME}:fedora-rawhide-gcc
    - docker push ${DOCKER_REGISTRY}${CORE_NAME}:fedora-rawhide-clang
    - docker push ${DOCKER_REGISTRY}${CORE_NAME}:opensuse-tumbleweed
    - docker push ${DOCKER_REGISTRY}${CORE_NAME}:opensuse-tumbleweed-gcc
    - docker push ${DOCKER_REGISTRY}${CORE_NAME}:opensuse-tumbleweed-clang
  after_script:
    - docker logout ${DOCKER_REGISTRY}

Windows MSVC/ClangCL/Clang Upload:
  stage: Upload Images
  only:
    - master
  tags:
    - docker-windows
  script:
    # MSVC
    - docker build --pull $env:NO_CACHE -t ${env:DOCKER_REGISTRY}${env:CORE_NAME}:windows-msvc -f windows/msvc.dockerfile -m 4GB windows
    - docker run --rm ${env:DOCKER_REGISTRY}${env:CORE_NAME}:windows-msvc
    # clang-cl
    - docker build --pull $env:NO_CACHE -t ${env:DOCKER_REGISTRY}${env:CORE_NAME}:windows-clang-cl -f windows/clang-cl.dockerfile -m 4GB windows
    - docker run --rm ${env:DOCKER_REGISTRY}${env:CORE_NAME}:windows-clang-cl
    # clang
    - docker build --pull $env:NO_CACHE -t ${env:DOCKER_REGISTRY}${env:CORE_NAME}:windows-clang -f windows/clang.dockerfile -m 4GB windows
    - docker run --rm ${env:DOCKER_REGISTRY}${env:CORE_NAME}:windows-clang
    # Upload
    - docker login -u $env:DOCKER_USER -p "$env:DOCKER_PASSWORD" $env:DOCKER_REGISTRY
    - docker push ${env:DOCKER_REGISTRY}${env:CORE_NAME}:windows-msvc
    - docker push ${env:DOCKER_REGISTRY}${env:CORE_NAME}:windows-clang-cl
    - docker push ${env:DOCKER_REGISTRY}${env:CORE_NAME}:windows-clang
  after_script:
    - docker logout $env:DOCKER_REGISTRY
